/*****************************************
Course: IMT 577
Student: Urvi Chaudhary
Assignment: Module 8
Date: 05/22/2022

*****************************************/

USE IMT577_DW_URVI_CHAUDHARY;

CREATE OR REPLACE SECURE VIEW DIM_CHANNEL_V AS 
(
SELECT DIMCHANNELID, CHANNELID, CHANNELCATEGORYID, CHANNELNAME, CHANNELCATEGORY

FROM DIM_CHANNEL
);

CREATE OR REPLACE SECURE VIEW DIM_CUSTOMER_V AS
(
SELECT DIMCUSTOMERID, DIMLOCATIONID, CUSTOMERID, CUSTOMERFULLNAME, 
    CUSTOMERFIRSTNAME, CUSTOMERLASTNAME, CUSTOMERGENDER

FROM DIM_CUSTOMER  
);

CREATE OR REPLACE SECURE VIEW DIM_LOCATION_V AS
(
SELECT DIMLOCATIONID, ADDRESS, CITY, POSTALCODE, STATE_PROVINCE, COUNTRY

FROM DIM_LOCATION 
);

CREATE OR REPLACE SECURE VIEW DIM_PRODUCT_V AS
(
SELECT DIMPRODUCTID, PRODUCTID, PRODUCTTYPEID, PRODUCTCATEGORYID, PRODUCTNAME, PRODUCTTYPE, PRODUCTCATEGORY,
  PRODUCTRETAILPRICE, PRODUCTWHOLESALEPRICE, PRODUCTCOST, PRODUCTRETAILPROFIT, PRODUCTWHOLESALEUNITPROFIT,
  PRODUCTPROFITMARGINUNITPERCENT

FROM DIM_PRODUCT
);

CREATE OR REPLACE SECURE VIEW DIM_RESELLER_V AS
(
SELECT DIMRESELLERID, DIMLOCATIONID, RESELLERID, RESELLERNAME, CONTACTNAME, PHONENUMBER, EMAIL

FROM DIM_RESELLER
);

CREATE OR REPLACE SECURE VIEW DIM_STORE_V AS
(
SELECT DIMSTOREID, DIMLOCATIONID, STOREID, STORENUMBER, STOREMANAGER

FROM DIM_STORE
);

CREATE OR REPLACE SECURE VIEW FACT_SALESACTUAL_V AS
(
SELECT SOURCESALESHEADERID, SOURCESALESDETAILID, DIMPRODUCTID, DIMSTOREID, DIMRESELLERID, DIMCUSTOMERID, 
    DIMCHANNELID, DIMSALEDATEID, DIMLOCATIONID,
    SALEAMOUNT, SALEQUANTITY, SALEUNITPRICE, SALEEXTENDEDCOST, SALETOTALPROFIT

FROM FACT_SALESACTUAL
);

CREATE OR REPLACE SECURE VIEW FACT_PRODUCTSALESTARGET_V AS
(
SELECT DIMPRODUCTID, DIMTARGETDATEID, PRODUCTTARGETSALESQUANTITY

FROM FACT_PRODUCTSALESTARGET
);

CREATE OR REPLACE SECURE VIEW FACT_SRCSALESTARGET_V AS
(
SELECT DIMCHANNELID, DIMSTOREID, DIMRESELLERID, DIMTARGETDATEID, SALESTARGETAMOUNT

FROM FACT_SRCSALESTARGET
);

-----------------------------------------------------------------------------------------------------------------

--VIEW 1: QUESTION 2

CREATE OR REPLACE SECURE VIEW BONUS_SHARE_V AS
(
SELECT YEAR, STORENUMBER, PRODUCTTYPE, PROFIT, SALE,
SUM(SALE) OVER (PARTITION BY YEAR) AS TOTAL_SALE,
ROUND((SALE/TOTAL_SALE),2) AS PROPORTION,
ROUND(
CASE WHEN YEAR = 2013 THEN 500000*(SALE/TOTAL_SALE)
WHEN YEAR = 2014 THEN 400000*(SALE/TOTAL_SALE)
END,2) AS BONUS_PROPORTION

FROM
(
SELECT D.Year, S.STORENUMBER,P.PRODUCTTYPE,
SUM(FSA.SALEAMOUNT) AS SALE,
SUM(FSA.SALETOTALPROFIT) AS PROFIT
FROM FACT_SALESACTUAL AS FSA
INNER JOIN DIM_STORE AS S ON FSA.DIMSTOREID = S.DIMSTOREID
INNER JOIN DIM_PRODUCT AS P ON FSA.DIMPRODUCTID = P.DIMPRODUCTID
INNER JOIN DIM_DATE AS D ON FSA.DIMSALEDATEID = D.DATE_PKEY

WHERE P.PRODUCTTYPE LIKE '%Casual' AND STORENUMBER IN (5,8)
AND D.YEAR || D.MONTH_NUM_IN_YEAR NOT IN (201411, 201412)
GROUP BY D.Year, S.STORENUMBER, P.PRODUCTTYPE
)
ORDER BY YEAR, STORENUMBER, PRODUCTTYPE
);

--SELECT * FROM BONUS_SHARE_V;

-----------------------------------------------------------------------------------------------------------------

--VIEW 2: QUESTION 3

CREATE OR REPLACE SECURE VIEW PRODUCT_SALES_V AS
(
SELECT D.YEAR, D.DAY_NAME, S.STORENUMBER, P.PRODUCTTYPE, 
SUM(FSA.SALEQUANTITY) AS QUANTITY, 
SUM(FSA.SALEAMOUNT) AS SALE

FROM FACT_SALESACTUAL AS FSA
INNER JOIN DIM_DATE AS D ON FSA.DIMSALEDATEID = D.DATE_PKEY
INNER JOIN DIM_STORE AS S ON FSA.DIMSTOREID = S.DIMSTOREID
INNER JOIN DIM_PRODUCT AS P ON FSA.DIMPRODUCTID = P.DIMPRODUCTID

WHERE STORENUMBER IN (5,8)
GROUP BY D.YEAR, D.DAY_NAME, S.STORENUMBER, P.PRODUCTTYPE
ORDER BY D.YEAR, D.DAY_NAME, S.STORENUMBER, P.PRODUCTTYPE
);

--SELECT * FROM PRODUCT_SALES_V;

-----------------------------------------------------------------------------------------------------------------

--VIEW 3: QUESTION 4

CREATE OR REPLACE SECURE VIEW STATEWISE_PERFORMANCE_V AS
(SELECT D.YEAR, L.STATE_PROVINCE, A.CNT_STORE,
SUM(FSA.SALEQUANTITY) AS QUANTITY,
SUM(FSA.SALEAMOUNT) AS SALE,
SUM(FSA.SALETOTALPROFIT) AS PROFIT,
QUANTITY/A.CNT_STORE AS QTY_PER_STORE,
SALE/A.CNT_STORE AS SALE_PER_STORE,
PROFIT/A.CNT_STORE AS PROFIT_PER_STORE

FROM FACT_SALESACTUAL AS FSA
INNER JOIN DIM_STORE AS S ON FSA.DIMSTOREID = S.DIMSTOREID
INNER JOIN DIM_DATE AS D ON D.DATE_PKEY = FSA.DIMSALEDATEID
INNER JOIN DIM_LOCATION AS L ON S.DIMLOCATIONID = L.DIMLOCATIONID
INNER JOIN DIM_PRODUCT AS P ON FSA.DIMPRODUCTID = P.DIMPRODUCTID
INNER JOIN
(
SELECT L.STATE_PROVINCE, 
COUNT(S.STORENUMBER) AS CNT_STORE
FROM DIM_STORE AS S
INNER JOIN DIM_LOCATION AS L ON S.DIMLOCATIONID = L.DIMLOCATIONID
WHERE L.STATE_PROVINCE <> 'Unknown'
GROUP BY L.STATE_PROVINCE
) A
ON L.STATE_PROVINCE = A.STATE_PROVINCE

WHERE L.STATE_PROVINCE <> 'Unknown'
GROUP BY D.YEAR, L.STATE_PROVINCE, A.CNT_STORE
ORDER BY A.CNT_STORE, D.YEAR DESC
);

--SELECT * FROM STATEWISE_PERFORMANCE_V;

-----------------------------------------------------------------------------------------------------------------

--VIEWS 4 and 5: QUESTION 1

CREATE OR REPLACE SECURE VIEW PERFORMANCE_CUMMULATIVE_V AS
(SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR AS MONTH_NUMBER, STORENUMBER,
SUM(ACT_AMT) OVER (PARTITION BY YEAR, STORENUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS ACTUAL_CUMM_SALE,
SUM(TARGET_AMT) OVER (PARTITION BY YEAR, STORENUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS TARGET_CUMM_SALE,
ROUND((ACTUAL_CUMM_SALE/TARGET_CUMM_SALE),4) * 100 AS PERCENT_TARGET_ACHIEVED,
CASE WHEN PERCENT_TARGET_ACHIEVED >= 100 THEN TRUE
WHEN PERCENT_TARGET_ACHIEVED < 100 THEN FALSE
END AS IF_TARGET_ACHIEVED

FROM
(
SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORENUMBER, 
SUM(TARGET_AMT) AS TARGET_AMT, 
SUM(ACT_AMT) AS ACT_AMT
FROM 
(
SELECT D.Year, D.MONTH_NAME, D.MONTH_NUM_IN_YEAR, S.STORENUMBER, 
SUM(FST.SALESTARGETAMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRCSALESTARGET AS FST
INNER JOIN DIM_STORE AS S ON FST.DIMSTOREID = S.DIMSTOREID
INNER JOIN DIM_DATE AS D ON FST.DIMTARGETDATEID = D.DATE_PKEY
WHERE STORENUMBER in (5,8)
GROUP BY D.Year, D.MONTH_NAME, D.MONTH_NUM_IN_YEAR, S.STORENUMBER

UNION 

SELECT D.Year, D.MONTH_NAME, D.MONTH_NUM_IN_YEAR, S.STORENUMBER, 0 AS TARGET_AMT, 
SUM(FSA.SALEAMOUNT) AS ACT_AMT
FROM FACT_SALESACTUAL AS FSA
INNER JOIN DIM_STORE AS S ON FSA.DIMSTOREID = S.DIMSTOREID
INNER JOIN DIM_DATE AS D ON FSA.DIMSALEDATEID = D.DATE_PKEY
WHERE STORENUMBER in (5,8)
GROUP BY D.Year, D.MONTH_NAME, D.MONTH_NUM_IN_YEAR, S.STORENUMBER 
)
GROUP BY YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORENUMBER
)
ORDER BY YEAR, MONTH_NUM_IN_YEAR, STORENUMBER
); 

--SELECT * FROM PERFORMANCE_CUMMULATIVE_V;

CREATE OR REPLACE SECURE VIEW CHANNELWISE_PROFITS_V AS
(
SELECT D.YEAR, P.PRODUCTCATEGORY, C.CHANNELNAME, C.CHANNELCATEGORY,
SUM(FSA.SALEQUANTITY) AS QUANTITY,
SUM(FSA.SALEAMOUNT) AS SALE,
SUM(FSA.SALETOTALPROFIT) AS PROFIT

FROM FACT_SALESACTUAL AS FSA
INNER JOIN DIM_DATE AS D ON FSA.DIMSALEDATEID = D.DATE_PKEY
INNER JOIN DIM_CHANNEL AS C ON FSA.DIMCHANNELID = C.DIMCHANNELID
INNER JOIN DIM_PRODUCT AS P ON FSA.DIMPRODUCTID = P.DIMPRODUCTID
GROUP BY D.YEAR, P.PRODUCTCATEGORY, C.CHANNELNAME, C.CHANNELCATEGORY
ORDER BY D.YEAR, P.PRODUCTCATEGORY, C.CHANNELNAME, C.CHANNELCATEGORY
);

--SELECT * FROM CHANNELWISE_PROFITS_V;

-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------





